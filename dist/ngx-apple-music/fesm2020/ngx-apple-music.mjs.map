{"version":3,"file":"ngx-apple-music.mjs","sources":["../../../projects/ngx-apple-music/src/lib/store/store.ts","../../../projects/ngx-apple-music/src/lib/store/musickit-store.ts","../../../projects/ngx-apple-music/src/public-api.ts","../../../projects/ngx-apple-music/src/ngx-apple-music.ts"],"sourcesContent":["import { Injectable, Inject } from \"@angular/core\";\r\nimport { BehaviorSubject, Observable, map, distinctUntilChanged } from \"rxjs\";\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport abstract class Store<T> {\r\n  private _state: BehaviorSubject<T>;\r\n\r\n  constructor(@Inject('') initialState: T) {\r\n    this._state = new BehaviorSubject<T>(initialState);\r\n  }\r\n\r\n  get state$(): Observable<T> {\r\n    return this._state.asObservable();\r\n  }\r\n\r\n  get state(): T {\r\n    return this._state.getValue();\r\n  }\r\n\r\n  setState<K extends keyof T, E extends Partial<Pick<T, K>>>(\r\n    fn: (state: T) => E\r\n  ): void {\r\n    const state = fn(this.state);\r\n    this._state.next({ ...this.state, ...state });\r\n  }\r\n\r\n  select<K>(selector: (state: T) => K): Observable<K> {\r\n    return this.state$.pipe(map(selector), distinctUntilChanged());\r\n  }\r\n}","import { Injectable, OnDestroy } from \"@angular/core\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { Store } from \"./store\";\r\n\r\nenum Events {\r\n  audioTrackAdded = \"audioTrackAdded\",\r\n  audioTrackChanged = \"audioTrackChanged\",\r\n  audioTrackRemoved = \"audioTrackRemoved\",\r\n  authorizationStatusDidChange = \"authorizationStatusDidChange\",\r\n  authorizationStatusWillChange = \"authorizationStatusWillChange\",\r\n  bufferedProgressDidChange = \"bufferedProgressDidChange\",\r\n  capabilitiesChanged = \"capabilitiesChanged\",\r\n  configured = \"configured\",\r\n  drmUnsupported = \"drmUnsupported\",\r\n  eligibleForSubscribeView = \"eligibleForSubscribeView\",\r\n  forcedTextTrackChanged = \"forcedTextTrackChanged\",\r\n  loaded = \"loaded\",\r\n  mediaCanPlay = \"mediaCanPlay\",\r\n  mediaElementCreated = \"mediaElementCreated\",\r\n  mediaItemStateDidChange = \"mediaItemStateDidChange\",\r\n  mediaItemStateWillChange = \"mediaItemStateWillChange\",\r\n  mediaPlaybackError = \"mediaPlaybackError\",\r\n  mediaSkipAvailable = \"mediaSkipAvailable\",\r\n  mediaUpNext = \"mediaUpNext\",\r\n  metadataDidChange = \"metadataDidChange\",\r\n  nowPlayingItemWillChange = \"nowPlayingItemWillChange\",\r\n  nowPlayingItemDidChange = \"nowPlayingItemDidChange\",\r\n  playbackBitrateDidChange = \"playbackBitrateDidChange\",\r\n  playbackDurationDidChange = \"playbackDurationDidChange\",\r\n  playbackProgressDidChange = \"playbackProgressDidChange\",\r\n  playbackRateDidChange = \"playbackRateDidChange\",\r\n  playbackStateWillChange = \"playbackStateWillChange\",\r\n  playbackStateDidChange = \"playbackStateDidChange\",\r\n  playbackTargetAvailableDidChange = \"playbackTargetAvailableDidChange\",\r\n  playbackTimeDidChange = \"playbackTimeDidChange\",\r\n  playbackVolumeDidChange = \"playbackVolumeDidChange\",\r\n  playerTypeDidChange = \"playerTypeDidChange\",\r\n  primaryPlayerDidChange = \"primaryPlayerDidChange\",\r\n  queueIsReady = \"queueIsReady\",\r\n  queueItemsDidChange = \"queueItemsDidChange\",\r\n  queuePositionDidChange = \"queuePositionDidChange\",\r\n  shuffleModeDidChange = \"shuffleModeDidChange\",\r\n  repeatModeDidChange = \"repeatModeDidChange\",\r\n  storefrontCountryCodeDidChange = \"storefrontCountryCodeDidChange\",\r\n  storefrontIdentifierDidChange = \"storefrontIdentifierDidChange\",\r\n  textTrackAdded = \"textTrackAdded\",\r\n  textTrackChanged = \"textTrackChanged\",\r\n  textTrackRemoved = \"textTrackRemoved\",\r\n  timedMetadataDidChange = \"timedMetadataDidChange\",\r\n}\r\n\r\nenum ResourceType {\r\n  activities = \"activities\",\r\n  albums = \"albums\",\r\n  \"apple-curators\" = \"apple-curators\",\r\n  artists = \"artists\",\r\n  charts = \"charts\",\r\n  curators = \"curators\",\r\n  genres = \"genres\",\r\n  \"music-videos\" = \"music-videos\",\r\n  playlists = \"playlists\",\r\n  search = \"search\",\r\n  \"search/hints\" = \"search/hints\",\r\n  songs = \"songs\",\r\n  stations = \"stations\",\r\n\r\n  //personalized content\r\n  library = \"library\",\r\n  recommendations = \"recommendations\",\r\n  \"recent/played\" = \"recent/played\",\r\n  \"history/heavy-rotation\" = \"history/heavy-rotation\",\r\n\r\n  //storefronts\r\n  storefronts = \"storefronts\",\r\n}\r\n\r\nenum API_PATH {\r\n  BASE = \"/v1/\",\r\n  CATALOG = `/v1/catalog/`,\r\n  LIBRARY = \"/v1/me/library/\",\r\n  STOREFRONT = \"/v1/storefronts/\",\r\n}\r\n\r\nexport interface MusickitState {\r\n  initialized: boolean;\r\n  volume: number;\r\n  storefront: string;\r\n  queue: Array<MusicKit.MediaItem>;\r\n  history: Array<MusicKit.MediaItem>;\r\n  queuePosition: number;\r\n  shuffleMode: MusicKit.PlayerShuffleMode;\r\n  repeatMode: MusicKit.PlayerRepeatMode;\r\n  currentTrack: MusicKit.MediaItem | null;\r\n  currentTrackArtworkURL: string;\r\n  currentPlaybackTime: number;\r\n  currentPlaybackDuration: number;\r\n  isPlaying: boolean;\r\n  playbackState: MusicKit.PlaybackStates | null;\r\n  userPlaylists: MusicKit.LibraryPlaylists[];\r\n}\r\n\r\nconst initialState: MusickitState = {\r\n  initialized: false,\r\n  volume: 0.25,\r\n  storefront: \"\",\r\n  queue: [],\r\n  history: [],\r\n  queuePosition: 0,\r\n  shuffleMode: MusicKit.PlayerShuffleMode.off,\r\n  repeatMode: MusicKit.PlayerRepeatMode.none,\r\n  currentTrack: null,\r\n  currentTrackArtworkURL: \"\",\r\n  currentPlaybackTime: 0,\r\n  currentPlaybackDuration: 0,\r\n  isPlaying: false,\r\n  playbackState: 0,\r\n  userPlaylists: [],\r\n};\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class MusickitStore extends Store<MusickitState> implements OnDestroy {\r\n  subs: Subscription = new Subscription();\r\n  instance!: MusicKit.MusicKitInstance;\r\n\r\n  constructor() {\r\n    super(initialState);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subs.unsubscribe();\r\n  }\r\n\r\n  addEventListener(listener: any) {\r\n    this.instance.addEventListener(listener.event, listener.function);\r\n  }\r\n\r\n  async reconfigure(devToken: string, appName: string, buildVer: string) {\r\n    this.instance = await MusicKit.configure({\r\n      developerToken: devToken,\r\n      app: {\r\n        name: appName,\r\n        build: buildVer,\r\n      },\r\n    });\r\n  }\r\n\r\n  async initMusicKit(devToken: string, appName: string, buildVer: string) {\r\n    this.instance = await MusicKit.configure({\r\n      developerToken: devToken,\r\n      app: {\r\n        name: appName,\r\n        build: buildVer,\r\n      },\r\n    });\r\n\r\n    // registering events\r\n\r\n    this.instance.addEventListener(\r\n      Events.playbackVolumeDidChange,\r\n      (event: any) =>\r\n        this.setState((state) => ({ volume: this.instance.volume }))\r\n    );\r\n\r\n    this.instance.addEventListener(\r\n      Events.nowPlayingItemDidChange,\r\n      (event: any) => {\r\n        if (this.instance.nowPlayingItem) {\r\n          this.state.history.push(this.instance.nowPlayingItem);\r\n          return this.setState((state) => ({\r\n            ...state,\r\n            ...{\r\n              currentTrackArtworkURL: MusicKit.formatArtworkURL(\r\n                this.instance.nowPlayingItem?.artwork ??\r\n                  state.currentTrack?.artwork!\r\n              ),\r\n              currentPlaybackTime: 0,\r\n              currentPlaybackDuration: 0,\r\n              currentTrack: this.instance.nowPlayingItem,\r\n            },\r\n          }));\r\n        }\r\n      }\r\n    );\r\n\r\n    this.instance.addEventListener(Events.playbackTimeDidChange, (event: any) =>\r\n      this.setState((state) => ({\r\n        currentPlaybackTime: this.instance.currentPlaybackTime,\r\n      }))\r\n    );\r\n\r\n    this.instance.addEventListener(\r\n      Events.playbackDurationDidChange,\r\n      (event: any) =>\r\n        this.setState((state) => ({\r\n          currentPlaybackDuration: this.instance.currentPlaybackDuration,\r\n        }))\r\n    );\r\n\r\n    this.instance.addEventListener(\r\n      Events.playbackStateDidChange,\r\n      (event: any) => {\r\n        this.setState((state) => ({\r\n          ...state,\r\n          ...{\r\n            isPlaying: this.instance.isPlaying,\r\n            playbackState: this.instance.playbackState,\r\n          },\r\n        }));\r\n      }\r\n    );\r\n\r\n    this.instance.volume = this.state.volume;\r\n\r\n    (this.instance as any).autoplayEnabled = true;\r\n    (this.instance as any)._autoplayEnabled = true;\r\n\r\n    (this.instance as any)._bag.features[\"enhanced-hls\"] = true;\r\n    (this.instance as any).bitrate = 2048;\r\n    (this.instance as any).api.music.session._config.url =\r\n      \"https://amp-api.music.apple.com\";\r\n\r\n    var playlists = await this.getUserPlaylists().then(\r\n      (res: MusicKit.LibraryPlaylists[]) => res\r\n    );\r\n\r\n    this.setState((state) => ({ userPlaylists: playlists }));\r\n  }\r\n\r\n  async startPlayingSong(id: string) {\r\n    await MusicKit.getInstance()\r\n      .setQueue({ song: id })\r\n      .finally(() => MusicKit.getInstance().play())\r\n      .catch((error: any) => console.error(error));\r\n  }\r\n\r\n  async startPlayingMedia(id: string, type: string, shuffle: boolean) {\r\n    const queueObject = type.includes(\"albums\")\r\n      ? { album: id }\r\n      : { playlist: id };\r\n\r\n    if (shuffle) {\r\n      this.setState(() => ({\r\n        shuffleMode: MusicKit.PlayerShuffleMode.songs,\r\n      }));\r\n    } else {\r\n      this.setState(() => ({\r\n        shuffleMode: MusicKit.PlayerShuffleMode.off,\r\n      }));\r\n    }\r\n    MusicKit.getInstance().shuffleMode = this.state.shuffleMode;\r\n    await MusicKit.getInstance()\r\n      .setQueue(queueObject)\r\n      .finally(() => MusicKit.getInstance().changeToMediaAtIndex(0))\r\n      .catch((error: any) => console.error(error));\r\n  }\r\n\r\n  async playStation(id: string) {\r\n    await MusicKit.getInstance()\r\n      .setQueue({ station: id })\r\n      .finally(() => MusicKit.getInstance().changeToMediaAtIndex(0))\r\n      .catch((error: any) => console.error(error));\r\n  }\r\n\r\n  async authorizeUser() {\r\n    return await MusicKit.getInstance().authorize();\r\n  }\r\n\r\n  async checkUserAuthorization() {\r\n    return MusicKit.getInstance().isAuthorized;\r\n  }\r\n\r\n  async getRecentlyPlayed(): Promise<\r\n    Array<MusicKit.Albums | MusicKit.Stations>\r\n  > {\r\n    return (\r\n      await MusicKit.getInstance().api.music(\r\n        API_PATH.BASE +\r\n          \"me/\" +\r\n          ResourceType[\"recent/played\"] +\r\n          \"?include[albums]=artists\"\r\n      )\r\n    ).data.data as unknown as Array<MusicKit.Albums | MusicKit.Stations>;\r\n  }\r\n\r\n  async getUserRecommendations(): Promise<\r\n    Array<MusicKit.PersonalRecommendation>\r\n  > {\r\n    let tmpArray: Array<MusicKit.Resource> = [];\r\n    let result = (\r\n      await MusicKit.getInstance().api.music(\r\n        API_PATH.BASE +\r\n          \"me/\" +\r\n          ResourceType.recommendations +\r\n          \"?include[albums]=artists\"\r\n      )\r\n    ).data.data as unknown as Array<MusicKit.PersonalRecommendation>;\r\n    console.log(result);\r\n    return result;\r\n  }\r\n\r\n  async getPlaylistInfo(\r\n    playlistId: string,\r\n    isLibraryPlaylist: boolean\r\n  ): Promise<MusicKit.LibraryPlaylists | MusicKit.Playlists> {\r\n    var playlist = await MusicKit.getInstance().api.music(\r\n      (isLibraryPlaylist ? API_PATH.LIBRARY : API_PATH.CATALOG + \"us/\") +\r\n        ResourceType.playlists +\r\n        \"/\" +\r\n        playlistId,\r\n      { include: [\"tracks\", \"catalog\"] }\r\n    );\r\n    return playlist.data.data[0] as unknown as MusicKit.LibraryPlaylists;\r\n  }\r\n\r\n  async getAlbumInfo(\r\n    albumId: string,\r\n    isLibraryAlbum: boolean\r\n  ): Promise<MusicKit.LibraryAlbums | MusicKit.Albums> {\r\n    var album = await MusicKit.getInstance().api.music(\r\n      (isLibraryAlbum ? API_PATH.LIBRARY : API_PATH.CATALOG + \"us/\") +\r\n        ResourceType.albums +\r\n        \"/\" +\r\n        albumId,\r\n      { include: [\"tracks\", \"catalog\", \"artists\"] }\r\n    );\r\n    return album.data.data[0] as unknown as\r\n      | MusicKit.Albums\r\n      | MusicKit.LibraryAlbums;\r\n  }\r\n\r\n  async getUserPlaylists(): Promise<MusicKit.LibraryPlaylists[]> {\r\n    var playlists = await MusicKit.getInstance().api.music(\r\n      API_PATH.LIBRARY + ResourceType.playlists\r\n    );\r\n    return playlists.data.data as unknown as MusicKit.LibraryPlaylists[];\r\n  }\r\n\r\n  async getSong(songId: string): Promise<MusicKit.Songs> {\r\n    var song = await MusicKit.getInstance().api.music(\r\n      API_PATH.CATALOG + \"{{storefrontId}}/\" + ResourceType.songs + \"/\" + songId\r\n    );\r\n    return song.data.data[0] as unknown as MusicKit.Songs;\r\n  }\r\n\r\n  async skipToPreviousItem() {\r\n    this.instance.skipToPreviousItem();\r\n  }\r\n\r\n  async skipToNextItem() {\r\n    this.instance.skipToNextItem();\r\n  }\r\n\r\n  async putPlaylist(playlistId: string, data: MusicKit.Songs[]) {\r\n    await MusicKit.getInstance().api.music(\r\n      API_PATH.LIBRARY +\r\n        ResourceType.playlists +\r\n        \"/\" +\r\n        playlistId +\r\n        \"/\" +\r\n        \"tracks\",\r\n      {},\r\n      {\r\n        fetchOptions: {\r\n          method: \"PUT\",\r\n          body: JSON.stringify({\r\n            data: data,\r\n          }),\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  togglePlayback() {\r\n    if (this.instance.isPlaying) this.instance.pause();\r\n    else this.instance.play();\r\n  }\r\n\r\n  async seekToTime(time: number) {\r\n    if (time > this.instance.currentPlaybackTime)\r\n      (\r\n        this.instance as any\r\n      )._playbackControllerInternal._playerOptions.services.mediaItemPlayback._currentPlayer.audio.currentTime =\r\n        time;\r\n    else\r\n      (this.instance as any)._mediaItemPlayback._currentPlayer.seekToTime(time);\r\n  }\r\n\r\n  // async waitSeekReady(time: number) {\r\n  //     const progress = setInterval(async () => {\r\n  //         if ((this.instance as any)._playbackControllerInternal._playerOptions.services.mediaItemPlayback._currentPlayer.currentBufferedProgress >= 20) {\r\n  //             (this.instance as any)._playbackControllerInternal._playerOptions.services.mediaItemPlayback._currentPlayer.audio.currentTime = time;\r\n  //             clearInterval(progress);\r\n  //         }\r\n  //     }, 200);\r\n  // }\r\n\r\n  setVolume(volume: number) {\r\n    this.instance.volume = volume;\r\n  }\r\n\r\n  replaceValue(item: any) {\r\n    for (var i in item) {\r\n      if (i == \"prop\") {\r\n        item[\"value\"] = \"\";\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  toggleShuffleMode() {\r\n    if (this.state.shuffleMode == MusicKit.PlayerShuffleMode.off) {\r\n      this.instance.shuffleMode = MusicKit.PlayerShuffleMode.songs;\r\n      this.setState((state) => ({\r\n        shuffleMode: MusicKit.PlayerShuffleMode.songs,\r\n      }));\r\n    } else {\r\n      this.instance.shuffleMode = MusicKit.PlayerShuffleMode.off;\r\n      this.setState((state) => ({\r\n        shuffleMode: MusicKit.PlayerShuffleMode.off,\r\n      }));\r\n    }\r\n  }\r\n\r\n  toggleRepeatMode() {\r\n    switch (this.state.repeatMode.valueOf()) {\r\n      case MusicKit.PlayerRepeatMode.none:\r\n        this.instance.repeatMode = MusicKit.PlayerRepeatMode.all;\r\n        this.setState((state) => ({\r\n          repeatMode: MusicKit.PlayerRepeatMode.all,\r\n        }));\r\n        break;\r\n      case MusicKit.PlayerRepeatMode.one:\r\n        this.instance.repeatMode = MusicKit.PlayerRepeatMode.none;\r\n        this.setState((state) => ({\r\n          repeatMode: MusicKit.PlayerRepeatMode.none,\r\n        }));\r\n        break;\r\n      case MusicKit.PlayerRepeatMode.all:\r\n        this.instance.repeatMode = MusicKit.PlayerRepeatMode.one;\r\n        this.setState((state) => ({\r\n          repeatMode: MusicKit.PlayerRepeatMode.one,\r\n        }));\r\n        break;\r\n    }\r\n  }\r\n}\r\n","/*\n * Public API Surface of ngx-apple-music\n */\n\nexport * from './lib/store/musickit-store';","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}