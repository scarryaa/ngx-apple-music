{"version":3,"file":"ngx-apple-music.mjs","sources":["../../../projects/ngx-apple-music/src/lib/store/store.ts","../../../projects/ngx-apple-music/src/lib/store/musickit-store.ts","../../../projects/ngx-apple-music/src/public-api.ts","../../../projects/ngx-apple-music/src/ngx-apple-music.ts"],"sourcesContent":["import { Injectable, Inject } from \"@angular/core\";\r\nimport { BehaviorSubject, Observable, map, distinctUntilChanged } from \"rxjs\";\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport abstract class Store<T> {\r\n  private _state: BehaviorSubject<T>;\r\n\r\n  constructor(@Inject('') initialState: T) {\r\n    this._state = new BehaviorSubject<T>(initialState);\r\n  }\r\n\r\n  get state$(): Observable<T> {\r\n    return this._state.asObservable();\r\n  }\r\n\r\n  get state(): T {\r\n    return this._state.getValue();\r\n  }\r\n\r\n  setState<K extends keyof T, E extends Partial<Pick<T, K>>>(\r\n    fn: (state: T) => E\r\n  ): void {\r\n    const state = fn(this.state);\r\n    this._state.next({ ...this.state, ...state });\r\n  }\r\n\r\n  select<K>(selector: (state: T) => K): Observable<K> {\r\n    return this.state$.pipe(map(selector), distinctUntilChanged());\r\n  }\r\n}","import { Injectable, OnDestroy } from \"@angular/core\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { Store } from \"./store\";\r\n\r\nenum Events {\r\n    audioTrackAdded = 'audioTrackAdded',\r\n    audioTrackChanged = 'audioTrackChanged',\r\n    audioTrackRemoved = 'audioTrackRemoved',\r\n    authorizationStatusDidChange = 'authorizationStatusDidChange',\r\n    authorizationStatusWillChange = 'authorizationStatusWillChange',\r\n    bufferedProgressDidChange = 'bufferedProgressDidChange',\r\n    capabilitiesChanged = 'capabilitiesChanged',\r\n    configured = 'configured',\r\n    drmUnsupported = 'drmUnsupported',\r\n    eligibleForSubscribeView = 'eligibleForSubscribeView',\r\n    forcedTextTrackChanged = 'forcedTextTrackChanged',\r\n    loaded = 'loaded',\r\n    mediaCanPlay = 'mediaCanPlay',\r\n    mediaElementCreated = 'mediaElementCreated',\r\n    mediaItemStateDidChange = 'mediaItemStateDidChange',\r\n    mediaItemStateWillChange = 'mediaItemStateWillChange',\r\n    mediaPlaybackError = 'mediaPlaybackError',\r\n    mediaSkipAvailable = 'mediaSkipAvailable',\r\n    mediaUpNext = 'mediaUpNext',\r\n    metadataDidChange = 'metadataDidChange',\r\n    nowPlayingItemWillChange = 'nowPlayingItemWillChange',\r\n    nowPlayingItemDidChange = 'nowPlayingItemDidChange',\r\n    playbackBitrateDidChange = 'playbackBitrateDidChange',\r\n    playbackDurationDidChange = 'playbackDurationDidChange',\r\n    playbackProgressDidChange = 'playbackProgressDidChange',\r\n    playbackRateDidChange = 'playbackRateDidChange',\r\n    playbackStateWillChange = 'playbackStateWillChange',\r\n    playbackStateDidChange = 'playbackStateDidChange',\r\n    playbackTargetAvailableDidChange = 'playbackTargetAvailableDidChange',\r\n    playbackTimeDidChange = 'playbackTimeDidChange',\r\n    playbackVolumeDidChange = 'playbackVolumeDidChange',\r\n    playerTypeDidChange = 'playerTypeDidChange',\r\n    primaryPlayerDidChange = 'primaryPlayerDidChange',\r\n    queueIsReady = 'queueIsReady',\r\n    queueItemsDidChange = 'queueItemsDidChange',\r\n    queuePositionDidChange = 'queuePositionDidChange',\r\n    shuffleModeDidChange = 'shuffleModeDidChange',\r\n    repeatModeDidChange = 'repeatModeDidChange',\r\n    storefrontCountryCodeDidChange = 'storefrontCountryCodeDidChange',\r\n    storefrontIdentifierDidChange = 'storefrontIdentifierDidChange',\r\n    textTrackAdded = 'textTrackAdded',\r\n    textTrackChanged = 'textTrackChanged',\r\n    textTrackRemoved = 'textTrackRemoved',\r\n    timedMetadataDidChange = 'timedMetadataDidChange'\r\n}\r\n\r\nenum ResourceType {\r\n    activities = 'activities',\r\n    albums = 'albums',\r\n    'apple-curators' = 'apple-curators',\r\n    artists = 'artists',\r\n    charts = 'charts',\r\n    curators = 'curators',\r\n    genres = 'genres',\r\n    'music-videos' = 'music-videos',\r\n    playlists = 'playlists',\r\n    search = 'search',\r\n    'search/hints' = 'search/hints',\r\n    songs = 'songs',\r\n    stations = 'stations',\r\n\r\n    //personalized content\r\n    library = 'library',\r\n    recommendations = 'recommendations',\r\n    'recent/played' = 'recent/played',\r\n    'history/heavy-rotation' = 'history/heavy-rotation',\r\n\r\n    //storefronts\r\n    storefronts = 'storefronts'\r\n}\r\n\r\nenum API_PATH {\r\n    BASE = '/v1/',\r\n    CATALOG = `/v1/catalog/`,\r\n    LIBRARY = '/v1/me/library/',\r\n    STOREFRONT = '/v1/storefronts/'\r\n}\r\n\r\nexport interface MusickitState {\r\n    initialized: boolean,\r\n    volume: number,\r\n    storefront: string,\r\n    queue: Array<MusicKit.MediaItem>;\r\n    history: Array<MusicKit.MediaItem>;\r\n    queuePosition: number;\r\n    shuffleMode: MusicKit.PlayerShuffleMode;\r\n    repeatMode: MusicKit.PlayerRepeatMode;\r\n    currentTrack: MusicKit.MediaItem | null;\r\n    currentTrackArtworkURL: string;\r\n    currentPlaybackTime: number;\r\n    currentPlaybackDuration: number;\r\n    isPlaying: boolean;\r\n    playbackState: MusicKit.PlaybackStates | null;\r\n    userPlaylists: MusicKit.LibraryPlaylists[];\r\n}\r\n\r\nconst initialState: MusickitState = {\r\n    initialized: false,\r\n    volume: 0.25,\r\n    storefront: '',\r\n    queue: [],\r\n    history: [],\r\n    queuePosition: 0,\r\n    shuffleMode: MusicKit.PlayerShuffleMode.off,\r\n    repeatMode: MusicKit.PlayerRepeatMode.none,\r\n    currentTrack: null,\r\n    currentTrackArtworkURL: '',\r\n    currentPlaybackTime: 0,\r\n    currentPlaybackDuration: 0,\r\n    isPlaying: false,\r\n    playbackState: null,\r\n    userPlaylists: []\r\n};\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class MusickitStore extends Store<MusickitState> implements OnDestroy {\r\n    subs: Subscription = new Subscription();\r\n    instance!: MusicKit.MusicKitInstance;\r\n\r\n    constructor() {\r\n        super(initialState);\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.subs.unsubscribe();\r\n    }\r\n\r\n    addEventListener(listener: any) {\r\n        this.instance.addEventListener(listener.event, listener.function);\r\n    }\r\n\r\n    async reconfigure(devToken: string, appName: string, buildVer: string) {\r\n        this.instance = await MusicKit.configure({\r\n            developerToken: devToken,\r\n            app: {\r\n                name: appName,\r\n                build: buildVer,\r\n            },\r\n        });\r\n    };\r\n\r\n    async initMusicKit(devToken: string, appName: string, buildVer: string) {\r\n        this.instance = await MusicKit.configure({\r\n            developerToken: devToken,\r\n            app: {\r\n                name: appName,\r\n                build: buildVer,\r\n            },\r\n        });\r\n\r\n        // registering events\r\n\r\n        this.instance.addEventListener(Events.playbackVolumeDidChange, ((event: any) =>\r\n            this.setState((state) => ({ volume: this.instance.volume }))\r\n        ));\r\n\r\n        this.instance.addEventListener(Events.nowPlayingItemDidChange, ((event: any) => {\r\n            if (this.instance.nowPlayingItem)\r\n            {\r\n                this.state.history.push(this.instance.nowPlayingItem);\r\n                return this.setState((state) => ({ ...state, ...{ \r\n                    currentTrackArtworkURL: MusicKit.formatArtworkURL(this.instance.nowPlayingItem?.artwork ?? state.currentTrack?.artwork!), \r\n                    currentPlaybackTime: 0, currentPlaybackDuration: 0, currentTrack: this.instance.nowPlayingItem} }));\r\n            }\r\n        }\r\n        ));\r\n\r\n        this.instance.addEventListener(Events.playbackTimeDidChange, ((event: any) =>\r\n            this.setState((state) => ({ currentPlaybackTime: this.instance.currentPlaybackTime }))\r\n        ));\r\n\r\n        this.instance.addEventListener(Events.playbackDurationDidChange, ((event: any) =>\r\n            this.setState((state) => ({ currentPlaybackDuration: this.instance.currentPlaybackDuration }))\r\n        ));\r\n\r\n        this.instance.addEventListener(Events.playbackStateDidChange, ((event: any) => {\r\n            this.setState((state) => ({ ...state, ...{ isPlaying: this.instance.isPlaying, playbackState: this.instance.playbackState } }));\r\n        }));\r\n\r\n        this.instance.volume = this.state.volume;\r\n\r\n        (this.instance as any).autoplayEnabled = true;\r\n        (this.instance as any)._autoplayEnabled = true;\r\n\r\n        (this.instance as any)._bag.features['enhanced-hls'] = true;\r\n        (this.instance as any).bitrate = 2048;\r\n\r\n        var playlists = await this.getUserPlaylists().then((res: MusicKit.LibraryPlaylists[]) => res);\r\n        this.setState((state) => ({ userPlaylists: playlists }));\r\n        this.getSong();\r\n    }\r\n\r\n    async startPlayingSong(id: string) {\r\n        await this.instance.setQueue({song: id, startPlaying: true}).catch((error: any) => console.error(error));\r\n    }\r\n\r\n    async authorizeUser() {\r\n        return await MusicKit.getInstance().authorize();\r\n    }\r\n\r\n    async checkUserAuthorization() {\r\n        return MusicKit.getInstance().isAuthorized;\r\n    }\r\n\r\n    async getPlaylistInfo(playlistId: string): Promise<MusicKit.LibraryPlaylists | MusicKit.Playlists> {\r\n        var fullPlaylist = await MusicKit.getInstance().api.music(API_PATH.LIBRARY + ResourceType.playlists + '/' + playlistId, {include: ['tracks']});\r\n        return ((fullPlaylist.data.data[0] as unknown) as MusicKit.LibraryPlaylists);\r\n    }\r\n\r\n    async getUserPlaylists(): Promise<MusicKit.LibraryPlaylists[]> {\r\n        var playlists = await MusicKit.getInstance().api.music(API_PATH.LIBRARY + ResourceType.playlists);\r\n        return ((playlists.data.data as unknown) as MusicKit.LibraryPlaylists[]);\r\n    }\r\n\r\n    async getSong() {\r\n        const songId = '1498121711';\r\n        const songId2 = '302987568';\r\n        await this.instance.setQueue({ song: songId }).catch((error: any) => console.error(error));\r\n        await this.instance.playLater({ song: songId2 }).catch((error: any) => console.error(error));\r\n    }\r\n\r\n    async skipToPreviousItem() {\r\n        this.instance.skipToPreviousItem();\r\n    }\r\n\r\n    async skipToNextItem() {\r\n        this.instance.skipToNextItem();\r\n    }\r\n\r\n    togglePlayback() {\r\n        if (this.instance.isPlaying) this.instance.pause();\r\n        else this.instance.play();\r\n    }\r\n\r\n    async seekToTime(time: number) {\r\n        if (time > this.instance.currentPlaybackTime) (this.instance as any)._playbackControllerInternal._playerOptions.services.mediaItemPlayback._currentPlayer.audio.currentTime = time;\r\n        else (this.instance as any)._mediaItemPlayback._currentPlayer.seekToTime(time);\r\n    }\r\n\r\n    // async waitSeekReady(time: number) {\r\n    //     const progress = setInterval(async () => {\r\n    //         if ((this.instance as any)._playbackControllerInternal._playerOptions.services.mediaItemPlayback._currentPlayer.currentBufferedProgress >= 20) {\r\n    //             (this.instance as any)._playbackControllerInternal._playerOptions.services.mediaItemPlayback._currentPlayer.audio.currentTime = time;\r\n    //             clearInterval(progress);\r\n    //         }\r\n    //     }, 200);\r\n    // }\r\n\r\n    setVolume(volume: number) {\r\n        this.instance.volume = volume;\r\n    }\r\n\r\n    toggleShuffleMode() {\r\n        if (this.state.shuffleMode == MusicKit.PlayerShuffleMode.off) {\r\n            this.instance.shuffleMode = MusicKit.PlayerShuffleMode.songs;\r\n            this.setState((state) => ({ shuffleMode: MusicKit.PlayerShuffleMode.songs }));\r\n        } else {\r\n            this.instance.shuffleMode = MusicKit.PlayerShuffleMode.off;\r\n            this.setState((state) => ({ shuffleMode: MusicKit.PlayerShuffleMode.off }));\r\n        }\r\n    }\r\n\r\n    toggleRepeatMode() {\r\n        switch (this.state.repeatMode.valueOf()) {\r\n            case MusicKit.PlayerRepeatMode.none:\r\n                this.instance.repeatMode = MusicKit.PlayerRepeatMode.all;\r\n                this.setState((state) => ({ repeatMode: MusicKit.PlayerRepeatMode.all }));\r\n                break;\r\n            case MusicKit.PlayerRepeatMode.one:\r\n                this.instance.repeatMode = MusicKit.PlayerRepeatMode.none;\r\n                this.setState((state) => ({ repeatMode: MusicKit.PlayerRepeatMode.none }));\r\n                break;\r\n            case MusicKit.PlayerRepeatMode.all:\r\n                this.instance.repeatMode = MusicKit.PlayerRepeatMode.one;\r\n                this.setState((state) => ({ repeatMode: MusicKit.PlayerRepeatMode.one }));\r\n                break;\r\n        }\r\n    }\r\n}","/*\n * Public API Surface of ngx-apple-music\n */\n\nexport * from './lib/store/musickit-store';","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}