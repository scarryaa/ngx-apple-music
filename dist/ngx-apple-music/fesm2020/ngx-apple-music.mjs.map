{"version":3,"file":"ngx-apple-music.mjs","sources":["../../../projects/ngx-apple-music/src/lib/ngx-apple-music.service.ts","../../../projects/ngx-apple-music/src/lib/ngx-apple-music.module.ts","../../../projects/ngx-apple-music/src/lib/ngx-apple-music.interface.ts","../../../projects/ngx-apple-music/src/lib/ngx-apple-music.models.ts","../../../projects/ngx-apple-music/src/lib/services/music-kit-wrapper.ts","../../../projects/ngx-apple-music/src/lib/services/playback.service.ts","../../../projects/ngx-apple-music/src/lib/services/authentication.service.ts","../../../projects/ngx-apple-music/src/lib/services/initialization.service.ts","../../../projects/ngx-apple-music/src/public-api.ts","../../../projects/ngx-apple-music/src/ngx-apple-music.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxAppleMusicService {\n\n  constructor() { }\n}","import { NgModule } from '@angular/core';\nimport { NgxAppleMusicService } from './ngx-apple-music.service';\n\n@NgModule({\n  declarations: [\n  ],\n  imports: [\n  ],\n  exports: [\n  ],\n  providers: [NgxAppleMusicService]\n})\nexport class NgxAppleMusicModule {\n}\n","import { Album, Artist, MusicVideo, Playlist, Song } from \"./ngx-apple-music.models\";\r\n\r\nexport enum MediaItemType {\r\n    albums,\r\n    songs,\r\n    artists,\r\n    musicVideos,\r\n    playlists,\r\n    stations\r\n}\r\n\r\nexport enum PlaylistType {\r\n    editorial,\r\n    external,\r\n    personalMix,\r\n    replay,\r\n    userShared\r\n}\r\n\r\nexport enum TrackTypes {\r\n    musicVideos,\r\n    songs\r\n}\r\n\r\nexport enum MediaKind {\r\n    audio,\r\n    video\r\n}\r\n\r\nexport enum ContentRating {\r\n    clean,\r\n    explicit\r\n}\r\n\r\ntype Attributes = {\r\n    albumName: string;\r\n    artistName: string;\r\n    artistUrl?: string;\r\n    artwork?: Artwork;\r\n    audioVariants?: string[];\r\n    composerName?: string;\r\n    curatorName?: string;\r\n    contentRating?: ContentRating;\r\n    copyright?: string;\r\n    description?: Description;\r\n    discNumber?: number;\r\n    durationInMillis: number;\r\n    editorialNotes?: EditorialNotes;\r\n    episodeNumber?: string;\r\n    has4K?: boolean;\r\n    hasHDR?: boolean;\r\n    genreNames?: string[];\r\n    isCompilation: boolean;\r\n    isComplete: boolean;\r\n    isChart?: boolean;\r\n    isLive?: boolean;\r\n    stationProviderName?: string;\r\n    mediaKind?: MediaKind;\r\n    isMasteredForItunes: boolean;\r\n    isSingle: boolean;\r\n    hasLyrics: boolean;\r\n    isAppleDigitalMaster: boolean;\r\n    isrc?: string;\r\n    lastModifiedDate?: string;\r\n    name: string;\r\n    playParams?: PlayParameters;\r\n    playlistType?: PlaylistType;\r\n    previews: Preview;\r\n    recordLabel?: string;\r\n    releaseDate?: string;\r\n    trackCount: number;\r\n    trackTypes?: TrackTypes[];\r\n    trackNumber?: number;\r\n    videoSubType?: string;\r\n    upc?: string;\r\n    url: string;\r\n\r\n    //classical only\r\n    attribution?: string;\r\n    movementCount?: number;\r\n    movementName?: string;\r\n    movementNumber?: number;\r\n    workId?: string;\r\n    workName?: string;\r\n}\r\n\r\nexport type AlbumAttributes = Required<Pick<Attributes, 'artistName' | 'artwork' | 'genreNames' | 'isCompilation' |\r\n    'isComplete' | 'isMasteredForItunes' | 'isSingle' | 'name' | 'trackCount' | 'url'>> \r\n    & Partial<Pick<Attributes, 'artistUrl' | 'audioVariants' | 'contentRating' | 'copyright' \r\n        | 'editorialNotes' | 'playParams' | 'recordLabel' | 'releaseDate' | 'upc'>>;\r\n\r\nexport type ArtistAttributes = Required<Pick<Attributes, 'genreNames' | 'name' | 'url'>>\r\n    & Partial<Pick<Attributes, 'artwork' | 'editorialNotes'>>;\r\n\r\nexport type SongAttributes = Required<Pick<Attributes, 'albumName' | 'artistName' | 'artwork' | 'genreNames' | 'hasLyrics' | 'isAppleDigitalMaster' | 'name' |\r\n    'previews' | 'url' | 'durationInMillis'>>\r\n    & Partial<Pick<Attributes, 'artistUrl' | 'attribution' | 'audioVariants' | 'composerName' | 'contentRating' | 'discNumber' | 'editorialNotes' | 'isrc' |\r\n        'movementCount' | 'movementName' | 'movementNumber' | 'playParams' | 'releaseDate' | 'trackNumber' | 'workName'>>;\r\n\r\nexport type MusicVideoAttributes = Required<Pick<Attributes, 'artistName' | 'artwork' | 'durationInMillis' | 'genreNames' | 'has4K' | 'hasHDR' | 'name' |\r\n    'previews' | 'url'>>\r\n    & Partial<Pick<Attributes, 'albumName' | 'artistUrl' | 'contentRating' | 'editorialNotes' | 'isrc' | 'playParams' | 'releaseDate' | 'trackNumber' |\r\n        'videoSubType' | 'workId' | 'workName'>>;\r\n\r\nexport type PlaylistAttributes = Required<Pick<Attributes, 'curatorName' | 'isChart' | 'name' | 'playlistType' | 'url'>> \r\n    & Partial<Pick<Attributes, 'artwork' | 'description' | 'lastModifiedDate' | 'playParams' | 'trackTypes'>>;\r\n\r\nexport type StationAttributes = Required<Pick<Attributes, 'artwork' | 'isLive' | 'mediaKind' | 'name' | 'url'>> \r\n    & Partial<Pick<Attributes, 'durationInMillis' | 'editorialNotes' | 'episodeNumber' | 'contentRating' | 'playParams' | 'stationProviderName'>>;\r\n\r\nexport type ViewAttributes = {\r\n    title: string;\r\n}\r\n\r\nexport type GenreAttributes = {\r\n    name: string;\r\n    parentId?: string;\r\n    parentName?: string;\r\n    chartLabel?: string;\r\n}\r\n\r\nexport type RecordLabelAttributes = {\r\n    artwork: Artwork;\r\n    description?: Description;\r\n    name: string;\r\n    url: string;\r\n}\r\n\r\nexport type LibraryAlbumAttributes = {\r\n    artistName: string;\r\n    artwork: Artwork;\r\n    contentRating?: ContentRating;\r\n    dateAdded?: string;\r\n    name: string;\r\n    playParams?: PlayParameters;\r\n    releaseDate?: string;\r\n    trackCount: number;\r\n    genreNames: string[];\r\n}\r\n\r\nexport type LibraryMusicVideoAttributes = {\r\n    albumName?: string;\r\n    artistName: string;\r\n    artwork: Artwork;\r\n    contentRating?: ContentRating;\r\n    durationInMillis: number;\r\n    genreNames: string[];\r\n    name: string;\r\n    playParams?: PlayParameters;\r\n    releaseDate?: string;\r\n    trackNumber?: number;\r\n}\r\n\r\nexport type LibraryArtistAttributes = {\r\n    name: string;\r\n}\r\n\r\nexport type LibrarySongAttributes = {\r\n    albumName?: string;\r\n    artistName: string;\r\n    artwork: Artwork;\r\n    contentRating?: ContentRating;\r\n    discNumber?: number;\r\n    durationInMillis: number;\r\n    genreNames: string[];\r\n    hasLyrics: boolean;\r\n    name: string;\r\n    playParams?: PlayParameters;\r\n    releaseDate?: string;\r\n    trackNumber?: number;\r\n}\r\n\r\nexport type Genre = {\r\n    id: string;\r\n    type: string;\r\n    href: string;\r\n    attributes?: GenreAttributes;\r\n}\r\n\r\nexport type RecordLabel = {\r\n    id: string;\r\n    type: any;\r\n    href: string;\r\n    attributes?: RecordLabelAttributes;\r\n    views: RecordLabelViews;\r\n}\r\n\r\nexport type Track = {\r\n    data: Array<MusicVideo | Song>;\r\n    href?: string;\r\n    next?: string;\r\n}\r\n\r\nexport type LibraryAlbum = {\r\n    id: string;\r\n    type: any;\r\n    href: string;\r\n    attributes?: LibraryAlbumAttributes;\r\n    relationships?: LibraryAlbumRelationships;\r\n}\r\n\r\nexport type LibraryArtist = {\r\n    id: string;\r\n    type: any;\r\n    href: string;\r\n    attributes?: LibraryArtistAttributes;\r\n    relationships?: LibraryArtistRelationships;\r\n}\r\n\r\nexport type LibraryMusicVideo = {\r\n    id: string;\r\n    type: any;\r\n    href: string;\r\n    attributes?: LibraryMusicVideoAttributes;\r\n    relationships?: LibraryMusicVideoRelationships;\r\n}\r\n\r\nexport type LibrarySong = {\r\n    id: string;\r\n    type: any;\r\n    href: string;\r\n    attributes?: LibrarySongAttributes;\r\n    relationships?: LibrarySongRelationships;\r\n}\r\n\r\nexport type View<T> = {\r\n    href?: string;\r\n    next?: string;\r\n    attributes: ViewAttributes;\r\n    data: T[];\r\n}\r\n\r\nexport type RecordLabelViews = {\r\n    latestReleases?: View<Album>;\r\n    topReleases?: View<Album>;\r\n}\r\n\r\nexport type AlbumViews = {\r\n    appearsOn?: View<Playlist>;\r\n    otherVersions?: View<Album>;\r\n    relatedAlbums?: View<Album>;\r\n    relatedVideos?: View<MusicVideo>;\r\n}\r\n\r\nexport type ArtistViews = {\r\n    appearsOnAlbums?: View<Album>;\r\n    compilationAlbums?: View<Album>;\r\n    featuredAlbums?: View<Album>;\r\n    featuredMusicVideos?: View<MusicVideo>;\r\n    featuredPlaylists?: View<Playlist>;\r\n    fullAlbums: View<Album>;\r\n    latestReleases: View<Album>;\r\n    liveAlbums: View<Album>;\r\n    similarArtists: View<Artist>;\r\n    singles: View<Album>;\r\n    topMusicVideos: View<MusicVideo>;\r\n    topSongs: View<Song>;\r\n}\r\n\r\nexport type MusicVideoViews = {\r\n    moreByArtist: View<MusicVideo>;\r\n    moreInGenre: View<MusicVideo>;\r\n}\r\n\r\nexport type PlaylistViews = {\r\n    featuredArtists: View<Artist>;\r\n    moreByCurator: View<Playlist>;\r\n}\r\n\r\nexport type Relationship<T> = {\r\n    href?: string;\r\n    next?: string;\r\n    data?: T[];\r\n    meta?: any;\r\n}\r\n\r\nexport type LibraryAlbumRelationships = {\r\n    artists?: Relationship<LibraryArtist>;\r\n    catalog?: Relationship<Album>;\r\n    tracks?: Relationship<Array<LibraryMusicVideo | LibrarySong>>;\r\n}\r\n\r\nexport type LibraryMusicVideoRelationships = {\r\n    albums?: Relationship<LibraryAlbum>;\r\n    artists?: Relationship<LibraryArtist>;\r\n    catalog?: Relationship<MusicVideo>;\r\n}\r\n\r\nexport type LibraryArtistRelationships = {\r\n    albums?: Relationship<LibraryAlbum>;\r\n    artists?: Relationship<LibraryArtist>;\r\n    catalog?: Relationship<MusicVideo>;\r\n}\r\n\r\nexport type LibrarySongRelationships = {\r\n    albums?: Relationship<LibraryAlbum>;\r\n    artists?: Relationship<LibraryArtist>;\r\n    catalog?: Relationship<Song>;\r\n}\r\n\r\nexport type AlbumRelationships = {\r\n    artists: Relationship<Artist>;\r\n    genres: Relationship<Genre>;\r\n    tracks: Relationship<Track>;\r\n    library: Relationship<LibraryAlbum>;\r\n    recordLabels: Relationship<RecordLabel>;   \r\n}\r\n\r\nexport type ArtistRelationships = {\r\n    albums: any;\r\n    genres: any;\r\n    musicVideos: any;\r\n    playlists: any;\r\n    station: any;\r\n}\r\n\r\nexport type SongRelationships = {\r\n    albums: any;\r\n    artists: any;\r\n    composers: any;\r\n    genres: any;\r\n    library: any;\r\n    musicVideos: any;\r\n    station: any;\r\n}\r\n\r\nexport type MusicVideoRelationships = {\r\n    albums: any;\r\n    artists: any;\r\n    genres: any;\r\n    library: any;\r\n    songs: any;\r\n}\r\n\r\nexport type PlaylistRelationships = {\r\n    curator: any;\r\n    library: any;\r\n    tracks: any;\r\n}\r\n\r\nexport type StationRelationships = {\r\n    radioShow: any;\r\n}\r\n\r\nexport interface EditorialNotes {\r\n    short?: string;\r\n    standard?: string;\r\n    name?: string;\r\n    tagline?: string;\r\n}\r\n\r\nexport interface PlayParameters {\r\n    id: string;\r\n    kind: MediaKind;\r\n}\r\n\r\nexport interface Artwork {\r\n    bgColor?: string;\r\n    height: number;\r\n    width: number;\r\n    textColor1?: string;\r\n    textColor2?: string;\r\n    textColor3?: string;\r\n    textColor4?: string;\r\n    url: string;\r\n}\r\n\r\nexport interface Description {\r\n    short?: string;\r\n    standard: string;\r\n}\r\n\r\nexport interface Preview {\r\n    artwork?: Artwork;\r\n    url: string;\r\n    hlsUrl?: string;\r\n}\r\n\r\nexport interface MediaItemConstructor<T> {\r\n    new(): MediaItem<T>;\r\n}\r\n\r\nexport type MediaItem<T> = {\r\n    id: string;\r\n    type: MediaItemType;\r\n    href: string;\r\n    attributes?: AlbumAttributes | ArtistAttributes | MusicVideoAttributes | SongAttributes | StationAttributes | PlaylistAttributes;\r\n    relationships?: Relationship<T>;\r\n    views?: View<T>;\r\n\r\n    //return promise\r\n    prepareToPlay(): any;\r\n}\r\n\r\nexport type MediaItemOptions = {\r\n    attributes: any;\r\n    id: string | undefined;\r\n    type: MediaItemType;\r\n}","import { MediaItem, MediaItemType, AlbumAttributes, ArtistAttributes, SongAttributes, MusicVideoAttributes, PlaylistAttributes, StationAttributes, Relationship, View, LibraryAlbumRelationships, AlbumRelationships, AlbumViews, ArtistViews, ArtistRelationships, SongRelationships, MusicVideoRelationships, MusicVideoViews, PlaylistViews, PlaylistRelationships, StationRelationships } from \"./ngx-apple-music.interface\";\r\n\r\nexport class Album {\r\n    id!: string;\r\n    href!: string;\r\n    attributes!: AlbumAttributes;\r\n    type!: MediaItemType.albums;\r\n    relationships!: AlbumRelationships;\r\n    views!: AlbumViews;\r\n\r\n    constructor(data: Required<Pick<MediaItem<Album>, 'id' | 'href'>> & \r\n        Partial<Pick<MediaItem<Album>, 'attributes' | 'relationships' | 'views'>>) {\r\n\r\n        let defaults = {\r\n            type: MediaItemType.albums\r\n        };\r\n\r\n        return Object.assign(this, data, defaults);\r\n    }\r\n}\r\n\r\nexport class Artist {\r\n    id!: string;\r\n    href!: string;\r\n    attributes!: ArtistAttributes;\r\n    relationships!: ArtistRelationships;\r\n    type!: MediaItemType.artists;\r\n    views!: ArtistViews;\r\n\r\n    constructor(data: Pick<MediaItem<Artist>, 'id' | 'href'> & Partial<MediaItem<Artist>> & {attributes: ArtistAttributes}) {\r\n\r\n        let defaults = {\r\n            type: MediaItemType.artists\r\n        };\r\n\r\n        return Object.assign(this, data, defaults);\r\n    }\r\n}\r\n\r\nexport class Song {\r\n    id!: string;\r\n    href!: string;\r\n    attributes!: SongAttributes;\r\n    relationships!: SongRelationships;\r\n    type!: MediaItemType.songs;\r\n\r\n    constructor(data: Pick<MediaItem<Song>, 'id' | 'href'> & Partial<MediaItem<Song>> & {attributes: SongAttributes}) {\r\n\r\n        let defaults = {\r\n            type: MediaItemType.songs\r\n        };\r\n\r\n        return Object.assign(this, data, defaults);\r\n    }\r\n}\r\n\r\nexport class MusicVideo {\r\n    id!: string;\r\n    href!: string;\r\n    attributes!: MusicVideoAttributes;\r\n    relationships!: MusicVideoRelationships;\r\n    views!: MusicVideoViews;\r\n    type!: MediaItemType.musicVideos;\r\n\r\n    constructor(data: Pick<MediaItem<MusicVideo>, 'id' | 'href'> & Partial<MediaItem<MusicVideo>> & {attributes: MusicVideoAttributes}) {\r\n\r\n        let defaults = {\r\n            type: MediaItemType.musicVideos,\r\n            attributes: { videoSubType: 'preview' }\r\n        };\r\n\r\n        let merged = Object.assign({}, data.attributes, defaults.attributes);\r\n        data.attributes = merged;\r\n        defaults.attributes = merged;\r\n\r\n        return Object.assign(this, data, defaults);\r\n    }\r\n}\r\n\r\nexport class Playlist {\r\n    id!: string;\r\n    href!: string;\r\n    attributes!: PlaylistAttributes;\r\n    relationships!: PlaylistRelationships;\r\n    type!: MediaItemType.playlists;\r\n    views!: PlaylistViews;\r\n\r\n    constructor(data: Pick<MediaItem<Playlist>, 'id' | 'href'> & Partial<MediaItem<Playlist>> & {attributes: PlaylistAttributes}) {\r\n\r\n        let defaults = {\r\n            type: MediaItemType.playlists\r\n        };\r\n\r\n        return Object.assign(this, data, defaults);\r\n    }\r\n}\r\n\r\nexport class Station {\r\n    id!: string;\r\n    href!: string;\r\n    attributes!: StationAttributes;\r\n    relationships!: StationRelationships;\r\n    type!: MediaItemType.stations;\r\n\r\n    constructor(data: Pick<MediaItem<Station>, 'id' | 'href'> & Partial<MediaItem<Station>> & {attributes: StationAttributes}) {\r\n\r\n        let defaults = {\r\n            type: MediaItemType.stations\r\n        };\r\n\r\n        return Object.assign(this, data, defaults);\r\n    }\r\n}","import { MediaItem } from \"../ngx-apple-music.interface\";\r\nimport { Album } from \"../ngx-apple-music.models\";\r\n\r\ndeclare let MusicKit: any;\r\n\r\nexport module MusicKitWrapper {\r\n    var queue: Array<Album> = new Array<Album>();\r\n\r\n    export async function getInstance() {\r\n        return MusicKit.getInstance();\r\n    }\r\n\r\n    //media playback & management\r\n\r\n    export async function play() {\r\n        console.log('called');\r\n        setQueue(queue);\r\n        let instance = MusicKit.getInstance();\r\n        instance.player.play();\r\n    }\r\n\r\n    export async function getUserPlaylists() {\r\n        console.log('called');\r\n        let instance = await MusicKit.getInstance();\r\n        console.log('me: ' + await MusicKit.getInstance().me);\r\n        let playlists = await instance.api.library.playlists(null);\r\n        console.log(playlists);\r\n        let playlistId = playlists[1].id;\r\n        await instance.setQueue({\r\n            playlist: playlistId,\r\n        }).then(async () => await instance.player.prepareToPlay().then(async () => \r\n        await instance.player.play()));\r\n    }\r\n\r\n    export async function setQueue(queue: Array<Album>, _?: any) {\r\n        let instance = MusicKit.getInstance();\r\n        queue.push(new Album({id: '1', href: ''}));\r\n        return instance.setQueue(queue);\r\n    }\r\n\r\n    export async function playNext (queue: any, _?: any) {\r\n        let instance = MusicKit.getInstance();\r\n        return instance.player.queue.prepend(queue);\r\n    }\r\n\r\n    export async function playLast(queue: any, _?: any) {\r\n        let instance = MusicKit.getInstance();  \r\n        return instance.player.queue.append(queue);\r\n    }\r\n\r\n    //init\r\n\r\n    export async function configureMusicKit(devToken: string, appName: string, buildVer: string) {\r\n        console.log(await initMusicKit(devToken, appName, buildVer).then(async () => await checkIfUserIsAuthorized()\r\n        .then(async (res) => { console.log(await MusicKit.getInstance().musicUserToken); return !res ? await startAuthentication() : null})));\r\n    };\r\n\r\n    export async function initMusicKit(devToken: string, appName: string, buildVer: string) {\r\n        await MusicKit.configure({\r\n            developerToken: devToken,\r\n            app: {\r\n                name: appName,\r\n                build: buildVer,\r\n            },\r\n        });\r\n        \r\n    }\r\n\r\n    // export async function internalInit() {\r\n    //     queue = new Array<MediaItem>();\r\n    //     queuePosition = 0;\r\n    // }\r\n\r\n    //auth\r\n\r\n    export async function startAuthentication() {\r\n        return await MusicKit.getInstance().authorize();\r\n    }\r\n\r\n    export async function checkIfUserIsAuthorized() {\r\n        return MusicKit.getInstance().isAuthorized;\r\n    }\r\n}","import { Injectable } from '@angular/core';\nimport { MusicKitWrapper } from './music-kit-wrapper';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlaybackService {\n\n  constructor() { }\n\n  async play() {\n    MusicKitWrapper.play();\n  }\n\n  async getUserPlaylists() {\n    await MusicKitWrapper.getUserPlaylists();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MusicKitWrapper } from './music-kit-wrapper';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  constructor() { }\n\n  async checkIfUserAuthorized() {\n      var authorized = await MusicKitWrapper.checkIfUserIsAuthorized();\n      if (authorized) return true;\n      else return this.authorizeUser();\n  }\n\n  async authorizeUser() {\n    return await MusicKitWrapper.startAuthentication();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MusicKitWrapper } from './music-kit-wrapper';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InitializationService {\n\n  constructor() { }\n\n  initMusicKit(devToken: string, appName: string, buildVer: string) {\n    return MusicKitWrapper.configureMusicKit(devToken, appName, buildVer);\n}\n}\n\nexport function initProvider(provider: InitializationService, devToken: string, appName: string, buildVer: string) {\n  return () => provider.initMusicKit(devToken, appName, buildVer);\n}","/*\n * Public API Surface of ngx-apple-music\n */\n\nexport * from './lib/ngx-apple-music.service';\nexport * from './lib/ngx-apple-music.module';\nexport * from './lib/ngx-apple-music.models';\nexport * from './lib/services/playback.service';\nexport * from './lib/services/authentication.service';\nexport * from './lib/services/initialization.service';","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}